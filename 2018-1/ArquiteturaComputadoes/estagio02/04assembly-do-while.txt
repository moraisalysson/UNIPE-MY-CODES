;SIMULANDO DO WHILE
    ;  x = 0 (alterar valor na linha 17)
    ;  y = 2 (alterar valor na linha 21)
    ;  do {
    ;    x = x + y;
    ;  } while(x <= 10); 
    
    ; base = 100 (0x64): endereço base dos operandos e tbm guarda o valor 0
    ; base + 4 (0x68): endereço de "x"
    ; base + 8 (0x6C): endereço de "y"


    addi $0, $0, 100             ; <- 0 : $0 recebe 100 (0x64), endereço base dos operandos

    addi $1, $1, 0               ; <- 1 : $1 recebe o valor de "x"

    sw $1, 4($0)                 ; 2 : transporta o VALOR de "x" para seu enderço na memória

    lw $1, 0($0)                 ; 3 : zerando $1

    addi $1, $1, 2               ; <- 4 : $1 recebe o valor de "y"

    sw $1, 8($0)                 ; 5 : transporta o VALOR de "y" para seu endereço na memória

    lw $1, 4($0)                 ; 6 : busca VALOR de "x" da memória e atribui a $1

    lw $2, 8($0)                 ; 7 : busca VALOR de "y" da memória e atribui a $2

    addi $3, $3, 10              ; <- 8 : $3 recebe o valor 10

    LOOP:

        add $1, $1, $2;          ; 9 : $1("x") = $1("x") + $2("y")

        beq $1, $3, FINALIZAR    ; 10 : se $1("x") == $2("y"), então pula para label FINALIZAR

        slt $4, $1, $3           ; 11 : se $1("x") >= 10, $4 = 0, senão $4 = 1

        beq $5, $4, FINALIZAR    ; 12 : se $5(0) >= $4(0), indicando que o valor de "x" é maior que 10, então pula para FINALIZAR

    j LOOP                       ; 13                        

    FINALIZAR:                   

        sw $1, 4($0)            ; 14 : salva o valor final de "x" no seu endereço na memória
 
    FIM:                         
    
    j FIM                        ; 15